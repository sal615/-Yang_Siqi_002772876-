/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.Business;
import Model.PlanDetails;
import Model.InsurancePlans;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author siqiyang
 */
public class UpdateInsuranceJPanel extends javax.swing.JPanel {
    private Business business;
    DefaultTableModel viewtableModel;
    PlanDetails plans;
    
    /**
     * Creates new form ViewInsuranceJPanel
     */
    public UpdateInsuranceJPanel(Business business) {
        initComponents();
        this.business = business;
        this.viewtableModel = (DefaultTableModel) planTable.getModel();
        
        displayInsurancePlans();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TitleLabel = new javax.swing.JLabel();
        planIDLabel = new javax.swing.JLabel();
        planIDField = new javax.swing.JTextField();
        planNameField = new javax.swing.JTextField();
        planNameLabel = new javax.swing.JLabel();
        UpdatePlanBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        planTable = new javax.swing.JTable();
        viewPlanBtn = new javax.swing.JButton();
        costPerAnualLabel = new javax.swing.JLabel();
        costPerAnualField = new javax.swing.JTextField();
        costPerMonthLabel2 = new javax.swing.JLabel();
        costPerMonthField = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TitleLabel.setText("Update Insurance Plan");
        add(TitleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, 260, 60));

        planIDLabel.setText("Plan ID");
        add(planIDLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, -1, -1));

        planIDField.setEnabled(false);
        add(planIDField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, 80, -1));
        add(planNameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, 80, -1));

        planNameLabel.setText("Plan Name");
        add(planNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, -1, -1));

        UpdatePlanBtn.setText("Update Plan");
        UpdatePlanBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdatePlanBtnActionPerformed(evt);
            }
        });
        add(UpdatePlanBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 390, -1, -1));

        planTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Plan ID", "Plan Name", "Cost Per Month", "Cost Per Annual"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(planTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 100, 670, 190));

        viewPlanBtn.setText("VIew Plans");
        viewPlanBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewPlanBtnActionPerformed(evt);
            }
        });
        add(viewPlanBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 330, -1, -1));

        costPerAnualLabel.setText("Cost Per Anual");
        add(costPerAnualLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, 100, 20));

        costPerAnualField.setEnabled(false);
        add(costPerAnualField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 270, 80, -1));

        costPerMonthLabel2.setText("Cost Per Month");
        add(costPerMonthLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, 100, 20));
        add(costPerMonthField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, 80, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void UpdatePlanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdatePlanBtnActionPerformed
        // TODO add your handling code here:
        
                // update the observation object
        if(!planIDField.getText().isEmpty()){
            this.plans.setName(planNameField.getText());
            this.plans.setCostPerMonth(Double.valueOf(costPerMonthField.getText()));

        } else {
            JOptionPane.showMessageDialog(null, "You have not made any selection");
        }
        
        displayInsurancePlans();                                      

    }//GEN-LAST:event_UpdatePlanBtnActionPerformed

    private void viewPlanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewPlanBtnActionPerformed
        // TODO add your handling code here:
        
                // what was clicked? Get the row in the table that was clicked
        int selectedRow = planTable.getSelectedRow();

        if (selectedRow >= 0) {

            // we can directly fetch the Observation object from the Zeroth position
            this.plans = (PlanDetails) planTable.getValueAt(selectedRow, 0);

            // fill all the text fields
            planIDField.setText(String.valueOf(this.plans.getPlanID()));
            planNameField.setText(String.valueOf(this.plans.getName()));
            costPerMonthField.setText(String.valueOf(this.plans.getCostPerMonth()));
            costPerAnualField.setText(String.valueOf(this.plans.getCostPerAnual(this.plans.getCostPerMonth())));
            

        } else {
            // no selection made by the user

            JOptionPane.showMessageDialog(null, "Please select a row!");
        }

    }//GEN-LAST:event_viewPlanBtnActionPerformed
    public void displayInsurancePlans() {
        InsurancePlans insurancePlans = this.business.getInsuranceplan();
        
        if(insurancePlans.getPlans().size()>0){
            viewtableModel.setRowCount(0);
            for (PlanDetails plans:insurancePlans.getPlans()){
                Object row[] = new Object[4];
                row[0] = plans;
                row[1] = plans.getName();
                row[2] = plans.getCostPerMonth();
                row[3] = plans.getCostPerAnual(plans.getCostPerMonth());
                
                viewtableModel.addRow(row);
            }
            
        } else {
            System.out.print("Empty list");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel TitleLabel;
    private javax.swing.JButton UpdatePlanBtn;
    private javax.swing.JTextField costPerAnualField;
    private javax.swing.JLabel costPerAnualLabel;
    private javax.swing.JTextField costPerMonthField;
    private javax.swing.JLabel costPerMonthLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField planIDField;
    private javax.swing.JLabel planIDLabel;
    private javax.swing.JTextField planNameField;
    private javax.swing.JLabel planNameLabel;
    private javax.swing.JTable planTable;
    private javax.swing.JButton viewPlanBtn;
    // End of variables declaration//GEN-END:variables
}
